# 기능 목록화
1. 사용자 관리 기능
사용자 인증 (회원가입/로그인):
사용자가 서비스에 가입하고 로그인하는 기능입니다.
로그인 시 사용자의 기본 정보를 불러옵니다.
신체 정보 관리:
회원가입 시 사용자의 초기 신체 정보(성별, 나이, 키, 몸무게)를 입력받아 저장합니다.
사용자가 자신의 신체 정보를 조회하고 수정할 수 있는 기능이 필요합니다.
일일 권장 섭취량 계산:
사용자의 신체 정보를 기반으로, 목표 달성(체중 유지 등)에 필요한 일일 권장 칼로리를 계산하여 저장합니다.

2. 식단 기록 및 섭취현황 조회 (핵심 기능)
음식 사진 업로드:
사용자가 자신이 섭취한 음식 사진을 앱에 업로드하는 기능입니다.
AI 음식 인식:
업로드된 사진을 학습된 AI 모델로 전송하여, 사진 속 음식이 무엇인지 판별하고 음식 이름 데이터를 반환받습니다.
음식 정보 조회:
AI가 판별한 음식 이름을 기반으로, 내부 음식 DB에서 해당 음식의 상세 정보(칼로리 등)를 검색합니다.
섭취 기록 생성 및 확인:
검색된 음식 정보(음식명, 칼로리)를 사용자의 오늘 날짜 섭취 기록에 추가하고, 방금 기록한 내용을 사용자에게 보여줍니다.

3. 데이터 분석 및 결과 표시 기능
일일 섭취 칼로리 집계:
사용자가 그날 하루 동안 기록한 모든 음식의 칼로리를 합산합니다.
목표 초과 여부 판단 및 시각화:
합산된 총섭취 칼로리와 사용자의 '일일 권장 섭취량'을 비교합니다.
목표 칼로리를 얼마나 초과했는지, 혹은 얼마나 남았는지를 시각적으로(예: 프로그레스 바, 그래프) 사용자에게 보여줍니다.
일별/주별/월별 섭취 기록 조회:
사용자가 자신의 과거 식단 기록을 달력이나 리스트 형태로 조회할 수 있는 기능이 필요합니다.
우선순위 정하기
사용자 인증 (회원가입/로그인): 서비스의 시작점
신체 정보 입력: 권장 칼로리 계산을 위한 필수 데이터 확보
일일 권장 섭취량 계산: 서비스의 핵심 로직
음식 사진 업로드: 사용자의 핵심 행동
AI 음식 인식: 서비스의 핵심 기술
음식 정보 조회 (DB): 인식된 음식의 칼로리 정보를 가져오는 기능
섭취 기록 생성: 사용자의 활동을 기록하는 기본 기능
일일 섭취 칼로리 집계: 목표와 비교하기 위한 데이터 처리
목표 초과 여부 판단 및 시각화: 사용자에게 제공되는 최종 결과물이자 핵심 가치
시스템 기능 (백엔드):
AI 모델 관리 (최초 버전)
음식 데이터베이스 구축 (최초 버전)
화면 흐름 정리
[온보딩/회원가입] → [로그인] → [메인 대시보드] ⇄ [음식 기록 시작] → [결과 확인 및 저장] → [메인 대시보드 업데이트]

# 사용자 시나리오 정리
## 신규 회원가입
사용자가 앱(Front-End)에 정보를 입력합니다.
Front-End는 이 정보를 Back-End 서버로 전송합니다.
Back-End는 전달받은 신체 정보로 내부에서 권장 칼로리를 계산합니다.
Back-End는 모든 정보를 DB에 저장하도록 요청합니다.
DB가 저장 성공을 알립니다.
Back-End가 Front-End로 최종 성공 응답을 보냅니다.
Front-End가 사용자에게 가입 완료 화면을 보여줍니다.
식단 기록 및 섭취현황 조회
사진 업로드: 사용자가 앱(Front-End)에서 음식 사진을 업로드합니다.
API 호출: Front-End는 이미지를 Back-End 서버로 전송합니다.
AI 음식 인식: Back-End는 이미지를 AI 서버로 보내 분석을 요청합니다.
,
결과 반환: AI 서버가 음식 이름을 분석하여 Back-End로 전달합니다.
정보 조회: Back-End는 전달받은 음식 이름으로 DB에서 칼로리 정보를 검색합니다.
정보 반환: DB가 검색된 칼로리 정보를 Back-End로 전달합니다.
기록 생성: Back-End가 최종 정보를 DB의 사용자 식단 로그에 저장합니다.
저장 완료: DB가 저장 성공을 알립니다.
최종 결과 전송: Back-End가 모든 처리 결과를 Front-End로 보냅니다.
결과 확인: Front-End가 사용자에게 "김치찌개, 450kcal가 기록되었습니다"와 같은 최종 화면을 보여줍니다.
3. 대쉬보드(섭취현황 표시)
사용자가 대시보드 화면에 접근합니다.
Front-End는 Back-End 서버에 오늘의 데이터를 요청합니다.
Back-End는 DB에서 해당 유저의 '일일 목표 칼로리'를 가져옵니다.
Back-End는 DB에서 오늘 날짜로 기록된 모든 '식사 기록'을 가져옵니다.
Back-End는 가져온 식사 기록의 칼로리를 모두 합산(집계)합니다.
Back-End는 합산된 값과 목표 칼로리를 비교하여 분석합니다.
Back-End는 분석된 최종 데이터(목표량, 섭취량, 남은 양 등)를 Front-End로 전달합니다.
Front-End는 이 데이터를 바탕으로 프로그레스 바나 그래프 등을 그려 사용자에게 보여줍니다.

# 주요 화면 정의
메인 페이지 (이메일(ID)/PW 입력창, 로그인 버튼, 회원가입 페이지로 이동하는 버튼)
회원가입 페이지 (이메일/PW/PWcheck/성별/나이/키/몸무게 입력창, 회원가입 버튼)
사용자별 화면 (데이터베이스에서 권장 칼로리, 오늘 먹은 음식을 불러옴, 사진촬영 버튼)
사진 촬영 페이지